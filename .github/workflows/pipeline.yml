name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  TRUNK_VERSION: 'v0.7.4'
  BINARYEN_VER: 'version_97'
  BINDGEN_VER: '0.2.68'
jobs:
  BuildAndTest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install wasm-bindgen-cli
        run: wget -qO- https://github.com/rustwasm/wasm-bindgen/releases/download/${BINDGEN_VER}/wasm-bindgen-${BINDGEN_VER}-x86_64-unknown-linux-musl.tar.gz | tar -xzf- && sudo mv wasm-bindgen-${BINDGEN_VER}-x86_64-unknown-linux-musl/* /bin/

      - name: Install Trunk
        run: wget -qO- https://github.com/thedodd/trunk/releases/download/${TRUNK_VERSION}/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-

      - name: Install Binaryen
        run: wget -qO- https://github.com/WebAssembly/binaryen/releases/download/${BINARYEN_VER}/binaryen-${BINARYEN_VER}-x86_64-linux.tar.gz | tar -xzf-

      - name: Install Clippy
        run: rustup component add clippy

      - name: Npm install
        run: npm i

      - name: Run Clippy
        run: cargo clippy

      - name: Cargo test
        run: cargo test --verbose

      - name: Wasm test Firefox
        run: wasm-pack test --firefox

      - name: Wasm test Chrome
        run: wasm-pack test --chrome

      - name: Clean & Build
        run: ./trunk clean && ./trunk build --release

      - name: Optimize output
        run: find dist -iname '*.wasm' -exec mv {} ankan.wasm \; -exec binaryen-${BINARYEN_VER}/bin/wasm-opt -Oz -o {} ankan.wasm \;
